{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaTrack",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "API Documentation for AquaTrack"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://aquatrack-backend.onrender.com/api-docs"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations related to user management, including registration, login, and user profile updates."
    },
    {
      "name": "Water",
      "description": "Operations about water"
    }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login to the application",
        "operationId": "loginUser",
        "description": "Login to the application with credentials",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User's password",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successful!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User registration",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email in use"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "User logout",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sessionId": {
                    "type": "string"
                  },
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful logout"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "gender": {
                      "type": "string"
                    },
                    "weight": {
                      "type": "number"
                    },
                    "activeTime": {
                      "type": "number"
                    },
                    "dailyWaterIntake": {
                      "type": "number"
                    },
                    "avatar": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update current user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "weight": {
                    "type": "number"
                  },
                  "activeTime": {
                    "type": "number"
                  },
                  "dailyWaterIntake": {
                    "type": "number"
                  },
                  "avatar": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "gender": {
                      "type": "string"
                    },
                    "weight": {
                      "type": "number"
                    },
                    "activeTime": {
                      "type": "number"
                    },
                    "dailyWaterIntake": {
                      "type": "number"
                    },
                    "avatar": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/refresh-token": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Refresh user's session",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sessionId": {
                    "type": "string"
                  },
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/total": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get total number of users",
        "operationId": "getTotalUsers",
        "responses": {
          "200": {
            "description": "Total users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalUsers": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/request-reset-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Request reset password token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset token sent"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/reset-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset"
          },
          "401": {
            "description": "Invalid or expired token"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/google-auth": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Get Google OAuth URL",
        "description": "Retrieve the URL for Google OAuth authorization",
        "operationId": "getGoogleOAuthUrl",
        "responses": {
          "200": {
            "description": "Successfully retrieved Google OAuth URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully retrieved Google OAuth URL!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://accounts.google.com/o/oauth2/v2/auth?scope=email%20profile&response_type=code&client_id=YOUR_CLIENT_ID&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fconfirm-google-auth"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Creates water volume data",
        "operationId": "createWater",
        "description": "Create water volum data with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "volume"
                ],
                "properties": {
                  "volume": {
                    "description": "Water's volume",
                    "type": "number",
                    "example": 80
                  },
                  "date": {
                    "description": "Water volume update date",
                    "type": "string",
                    "example": "20.07.2024"
                  },
                  "time": {
                    "description": "Water volume update time",
                    "type": "string",
                    "example": "14:5"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates water volume",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/daily": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get data on the consumed water for the day",
        "operationId": "getWaterPerDay",
        "description": "Get data on the consumed water for the day",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "integer"
            },
            "example": 2024
          },
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "string",
              "pattern": "^\\d{2}$",
              "example": "07"
            }
          },
          {
            "in": "query",
            "name": "day",
            "schema": {
              "type": "string",
              "pattern": "^\\d{2}$",
              "example": "20"
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found data!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/water"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get data on the consumed water for the month",
        "operationId": "getWaterPerMonth",
        "description": "Get data on the consumed water for the month",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "integer"
            },
            "example": 2024
          },
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "string",
              "pattern": "^\\d{2}$",
              "example": "07"
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found data!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/{id}": {
      "put": {
        "tags": [
          "Water"
        ],
        "summary": "Update water volume by id",
        "operationId": "putWater",
        "description": "Update water volume by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "669ba5f44b0321e6c93ae9f3"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "volume": {
                    "description": "Water volume",
                    "type": "number",
                    "example": 60
                  },
                  "date": {
                    "description": "Water volume update date",
                    "type": "string",
                    "example": "20.07.2024"
                  },
                  "time": {
                    "description": "Water volume update time",
                    "type": "string",
                    "example": "14:56"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated water volume",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated water volume!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water volume by id",
        "operationId": "deleteWater",
        "description": "Delete water volume by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "669ba5f44b0321e6c93ae9f3"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted water volume by id"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "_id",
          "volume",
          "userId",
          "data",
          "time"
        ],
        "properties": {
          "_id": {
            "description": "Water's id",
            "type": "string",
            "example": "669b4b5ee4582ae60fc053a8"
          },
          "volume": {
            "description": "Water's volume",
            "type": "number",
            "example": 60
          },
          "userId": {
            "description": "Id of the user who manages the water volume",
            "type": "string",
            "example": "669b4b40e4582ae60fc0539f"
          },
          "date": {
            "description": "Date of creation of data on the volume of water consumed",
            "type": "string",
            "example": "20.07.2024"
          },
          "time": {
            "description": "Time of creation of data on the volume of water consumed",
            "type": "string",
            "example": "09:50"
          },
          "createdAt": {
            "description": "Document creation time (generated automatically)",
            "type": "string",
            "example": "2024-06-10T19:50:56.197+00:00"
          },
          "updatedAt": {
            "description": "Document update time (generated automatically)",
            "type": "string",
            "example": "2024-06-10T19:50:56.197+00:00"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                }
              }
            }
          }
        }
      }
    }
  }
}